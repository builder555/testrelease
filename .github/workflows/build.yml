name: Increment Version

on:
  push:
    branches:
      - master

jobs:
  increment-version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.increment-version.outputs.tag}}
    if: "!startsWith(github.event.head_commit.message, 'chore:')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Get current version
        id: get-version
        run: echo "current_version=$(cat version.txt)" >> $GITHUB_OUTPUT

      - name: Determine version increment
        id: determine-increment
        run: |
          # Parse the latest commit message and determine the type of change
          COMMIT_MESSAGE=$(git log --format=%B -n 1 HEAD)
          if [[ "$COMMIT_MESSAGE" == "fix:"* ]]; then
            echo "increment=patch" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MESSAGE" == "feat:"* ]]; then
            echo "increment=minor" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MESSAGE" == "fix!"* ]] || [[ "$COMMIT_MESSAGE" == "feat!"* ]]; then
            echo "increment=major" >> $GITHUB_OUTPUT
          else
            echo "increment=none" >> $GITHUB_OUTPUT
          fi

      - name: Increment version
        id: increment-version
        run: |
          # Parse the current version using semver
          IFS='.' read -r major minor patch <<< "$(cat version.txt)"
          
          # Determine the type of increment and update the version number accordingly
          INCREMENT_TYPE=${{ steps.determine-increment.outputs.increment }}
          if [[ "$INCREMENT_TYPE" == "patch" ]]; then
            patch=$((patch + 1))
          elif [[ "$INCREMENT_TYPE" == "minor" ]]; then
            minor=$((minor + 1))
            patch=0
          elif [[ "$INCREMENT_TYPE" == "major" ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          fi

          # Update the version file
          echo "$major.$minor.$patch" > version.txt
          echo "tag=v$major.$minor.$patch" >> $GITHUB_OUTPUT

      - name: Commit version changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add version.txt
          git commit -m "chore: bump version to $(cat version.txt)"
          git tag ${{ steps.increment-version.outputs.tag }}
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
  build-and-release:
    needs: increment-version
    runs-on: ubuntu-latest
    # if: "startsWith(github.event.head_commit.message, 'chore:')"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install pyinstaller
      - name: Build application
        run: |
          pyinstaller api/ws_serve.py
          pyinstaller --add-data ui:ui ui/serve.py
      - name: Package application
        id: package-app
        run: |
          zipname=PineSAM-${{ steps.increment-version.outputs.tag }}.zip
          cd dist && zip -r $zipname ws_serve/ serve/ ../start.sh
          fullpath=$(realpath $zipname)
          echo "dist_path=$fullpath" >> $GITHUB_OUTPUT
      # - name: Upload artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: myapp
      #     path: |
      #       dist/serve
        
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.increment-version.outputs.tag }}
          files: |
            ${{ steps.package-app.outputs.dist_path }}
