name: Buld a release

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get version
        id: get-version
        run: |
          echo "tag=v$(cat version.txt)" >> $GITHUB_OUTPUT
      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.x'
      # - name: Install dependencies
      #   run: pip install pyinstaller websockets
      # - name: Build application
      #   run: |
      #     pyinstaller api/ws_serve.py
      #     pyinstaller --add-data ui:ui ui/serve.py
      - name: Package application
        id: package-app
        run: |
          zipname=ubu-pack.zip
          # zipname=$(basename ${GITHUB_REPOSITORY})-Ubuntu-${{ steps.get-version.outputs.tag }}.zip
          zip -r $zipname api/
          # cd dist && zip -r $zipname ws_serve/ serve/ 
          # cd .. 
          # zip -u dist/$zipname start.sh
          # fullpath=$(realpath $zipname)
          echo "dist_path=$zipname" >> $GITHUB_OUTPUT
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact-ubuntu
          path: ubu-pack.zip
          # path: ${{ steps.package-app.outputs.dist_path }}

  # build-mac:
  #   runs-on: macos-latest
  # build-win:
  #   runs-on: windows-latest
  create-release:
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get version
        id: get-version
        run: |
          echo "tag=v$(cat version.txt)" >> $GITHUB_OUTPUT
      # - name: Update changelog
      #   id: update-changelog
      #   run: |
      #     API_URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits"
      #     COMMITS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$API_URL" | jq -r 'map(select(.commit.message | startswith("chore:") | not)) | .[] | "* \(.commit.message) [\(.sha[:7])](\(.html_url))"')
      #     echo "# Changelog" > changelog.tmp
      #     echo "" >> changelog.tmp
      #     echo "## v$(cat version.txt)" >> changelog.tmp
      #     echo "" >> changelog.tmp
      #     echo "$COMMITS" >> changelog.tmp
      #     echo "$COMMITS" > release_msg.tmp
      #     tail -n +2 CHANGELOG.md >> changelog.tmp
      #     mv changelog.tmp CHANGELOG.md
      #     git config --local user.email "github-actions[bot]@users.noreply.github.com"
      #     git config --local user.name "github-actions[bot]"
      #     git add CHANGELOG.md
      #     git commit -m "chore: update changelog"
      #     git push
      #     echo "release_path=$(realpath release_msg.tmp)" >> $GITHUB_OUTPUT
      - name: Download files from workspace
        id: download
        uses: actions/download-artifact@v3
        with:
          name: build-artifact-ubuntu
          path: .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get-version.outputs.tag }}
          # body_path: ${{ steps.update-changelog.outputs.release_path }}
          files: |
            ${{ steps.download.outputs.download-path }}
